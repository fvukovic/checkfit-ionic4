{"version":3,"sources":["src/app/pages/customer-homepage/customer-homepage.page.html","src/app/pages/customer-homepage/customer-homepage-routing.module.ts","src/app/pages/customer-homepage/customer-homepage.module.ts","src/app/pages/customer-homepage/customer-homepage.page.scss","src/app/pages/customer-homepage/customer-homepage.page.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<ion-header [translucent]=\\\"true\\\">\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title>about-us</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n  <ion-content class=\\\"mapp\\\"> \\n    <style>\\n      .map {\\n        height: 80% !important;\\n      } \\n    </style>\\n    <div #mapElement class=\\\"map\\\"></div> \\n<ion-card (click)=\\\"openStreetPicker('from')\\\"> {{fromAddress}} </ion-card>\\n<ion-card (click)=\\\"openStreetPicker('to')\\\"> {{toAddress}} </ion-card>\\n<ion-radio-group>\\n  1<ion-radio>1</ion-radio>\\n  2<ion-radio>2</ion-radio>\\n  3<ion-radio>3</ion-radio>\\n  4<ion-radio>42</ion-radio>\\n</ion-radio-group>\\n<br/>\\n  <ion-button (click)=\\\"orderTaxi()\\\">{{ \\\"customerHomepage.myRides\\\" | translate }}</ion-button>\\n  </ion-content>\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { CustomerHomepagePage } from './customer-homepage.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CustomerHomepagePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class CustomerHomepagePageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { CustomerHomepagePageRoutingModule } from './customer-homepage-routing.module';\n\nimport { CustomerHomepagePage } from './customer-homepage.page';\nimport {TranslateModule} from '@ngx-translate/core';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule, \n    CustomerHomepagePageRoutingModule,\n    TranslateModule\n  ],\n  declarations: [CustomerHomepagePage]\n})\nexport class CustomerHomepagePageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2N1c3RvbWVyLWhvbWVwYWdlL2N1c3RvbWVyLWhvbWVwYWdlLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit, AfterContentInit, ViewChild } from \"@angular/core\";\nimport { ModalController } from \"@ionic/angular\";\nimport { StreetPickerPage } from \"../popups/street-picker/street-picker.page\";\nimport { Router } from \"@angular/router\";\nimport { LocationService } from '../../services/location.service';\nimport {\n  NativeGeocoder,\n  NativeGeocoderResult,\n  NativeGeocoderOptions\n} from \"@ionic-native/native-geocoder/ngx\"; \n\ndeclare var google;\n@Component({\n  selector: \"app-customer-homepage\",\n  templateUrl: \"./customer-homepage.page.html\",\n  styleUrls: [\"./customer-homepage.page.scss\"]\n})\nexport class CustomerHomepagePage implements OnInit, AfterContentInit {\n  map;\n  fromAddress: String;\n  toAddress: String;\n  @ViewChild(\"mapElement\", { static: true }) mapElement;\n\n  constructor(\n    private modalcontroller: ModalController,\n    private router: Router,\n    private locationService: LocationService\n  ) {\n    this.fromAddress = \"Kliknite za unos addrese\";\n    this.toAddress = \"Kliknite za unos addrese\";\n  }\n\n  ngOnInit() {}\n\n  ngAfterContentInit(): void {\n    this.map = new google.maps.Map(this.mapElement.nativeElement, {\n      center: { lat: -34.397, lng: 150.644 },\n      zoom: 8\n    });\n  }\n\n  async openStreetPicker(picker) {\n    const modal = await this.modalcontroller.create({\n      component: StreetPickerPage,\n      componentProps: {\n        picker: picker\n      }\n    });\n    modal.onDidDismiss().then(response => {\n      const data = response[\"data\"];\n      if (data[\"address\"] == null) {\n        return;\n      }\n      if (data[\"picker\"] == \"from\") {\n        this.fromAddress = data[\"address\"];\n      } else {\n        this.toAddress = data[\"address\"];\n      }\n    });\n\n    return await modal.present();\n  }\n\n  async orderTaxi() {\n    this.locationService.getReverseGeocode(45.5,19).then((result: NativeGeocoderResult[]) => \n    { \n      result[0]\n    });\n    let fromAddress = await this.locationService.getForwardGeocode2(this.fromAddress + \", Varaždin, Croatia\"); \n    let toAddress = await this.locationService.getForwardGeocode2(this.toAddress + \", Varaždin, Croatia\");  \n    let params = {\n      fromLat: fromAddress[\"latitude\"],\n      fromLong: fromAddress[\"longitude\"],\n      toLat:toAddress[\"latitude\"],\n      toLong:toAddress[\"longitude\"],\n    };\n\n    this.router.navigate([\"/search-ride\"],  { queryParams: {data:JSON.stringify(params)} });\n  }\n}\n"],"sourceRoot":"webpack:///","file":"7-es5.js"}